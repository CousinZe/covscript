define head_pix=darwin_pixel("#",true,false,get_color("white"),get_color("black"))
define body_pix=darwin_pixel("+",true,false,get_color("white"),get_color("black"))
define food_pix=darwin_pixel("@",true,false,get_color("white"),get_color("black"))
define snake_body={}
define snake_head={0,0}
define food={0,0}
define heading=2
define init_long=5
define god_mode=false
define cross_wall=false
define hard=3
define score=0

function die()
	define str0="You die!Your score is "+score
	define str1="Press any key to continue..."
	while(true)
		if(is_kb_hit())
			get_kb_hit()
			break
		end
		clear_drawable()
		fill_drawable(darwin_pixel(" ",true,false,get_color("white"),get_color("red")))
		draw_string(0.5*(get_width_drawable()-sizeof(str0)),0.5*get_height_drawable(),str0,darwin_pixel(" ",true,false,get_color("white"),get_color("red")))
		draw_string(0.5*(get_width_drawable()-sizeof(str1)),get_height_drawable()-1,str1,darwin_pixel(" ",true,false,get_color("white"),get_color("red")))
		update_drawable()
	end
end

function gen_food()
	define is_fit=true
	while(is_fit)
		food[0]=randint(0,get_width_drawable()-1)
		food[1]=randint(0,get_height_drawable()-1)
		is_fit=false
		block
			define i=0
			while(i<sizeof(snake_body))
				if(snake_body[i][0]==food[0]&&snake_body[i][1]==food[1])
					is_fit=true
				end
				++i
			end
		end
	end
end

function start()
	snake_head={init_long,to_integer(0.5*get_height_drawable())}
	block
		define i=0
		while(i<init_long-1)
			push_back_array(snake_body,{snake_head[0]-i,snake_head[1]})
			++i
		end
	end
	gen_food()
	define frame=0
	while(true)
		if(is_kb_hit())
			define ch=get_kb_hit()
			if(ch==get_ascii("w"))
				if(god_mode||heading!=-2)
					heading=-1
				end
			end
			if(ch==get_ascii("s"))
				if(god_mode||heading!=-1)
					heading=-2
				end
			end
			if(ch==get_ascii("a"))
				if(god_mode||heading!=2)
					heading=1
				end
			end
			if(ch==get_ascii("d"))
				if(god_mode||heading!=1)
					heading=2
				end
			end
		end
		if(frame==hard)
			if(heading==1)
				--snake_head[0]
			end
			if(heading==2)
				++snake_head[0]
			end
			if(heading==-1)
				--snake_head[1]
			end
			if(heading==-2)
				++snake_head[1]
			end
			if(cross_wall)
				if(snake_head[0]<0)
					snake_head[0]=snake_head[0]+get_width_drawable()-1
					frame=0
					continue
				end
				if(snake_head[0]>get_width_drawable()-1)
					snake_head[0]=snake_head[0]-get_width_drawable()-1
					frame=0
					continue
				end
				if(snake_head[1]<0)
					snake_head[1]=snake_head[1]+get_height_drawable()-1
					frame=0
					continue
				end
				if(snake_head[1]>get_height_drawable()-1)
					snake_head[1]=snake_head[1]-get_height_drawable()-1
					frame=0
					continue
				end
			else
				if(snake_head[0]<0||snake_head[0]>get_width_drawable()-1||snake_head[1]<0||snake_head[1]>get_height_drawable()-1)
					die()
					return 0
				end
			end
			if(!god_mode)
				block
					define i=0
					while(i<sizeof(snake_body))
						if(snake_body[i][0]==snake_head[0]&&snake_body[i][1]==snake_head[1])
							die()
							return 0
						end
						++i
					end
				end
			end
			push_front_array(snake_body,snake_head)
			if(snake_head[0]==food[0]&&snake_head[1]==food[1])
				gen_food()
				score=score+to_integer(10*(1.0/hard))
			else
				pop_back_array(snake_body)
			end
			frame=0
		end
		clear_drawable()
		block
			define i=0
			while(i<sizeof(snake_body))
				draw_point(snake_body[i][0],snake_body[i][1],body_pix)
				++i
			end
		end
		draw_point(snake_head[0],snake_head[1],head_pix)
		draw_point(food[0],food[1],food_pix)
		update_drawable()
		++frame
	end
end

delay(500)
init_graphics()
fit_drawable()
while(true)
	clear_array(snake_body)
	heading=2
	start()
end
